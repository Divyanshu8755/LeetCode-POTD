/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isEvenOddTree(TreeNode root) {
        if(root==null){
            return false;
        }
        Queue<TreeNode> q=new LinkedList<>();
        q.add(root);
        boolean flag=true;
        while(!q.isEmpty()){
            int cnt=q.size();
            int prev=flag?Integer.MIN_VALUE:Integer.MAX_VALUE;
            for(int i=0;i<cnt;i++){
                TreeNode curr=q.poll();
                if(flag){
                    if(curr.val % 2==0 || curr.val <= prev){
                        return false;
                    }
                }
                else{
                    if(curr.val % 2!=0 || curr.val >= prev){
                        return false;
                    }
                }
                if(curr.left!=null){
                    q.add(curr.left);
                }
                if(curr.right!=null){
                    q.add(curr.right);
                }
                prev=curr.val;
            }
            flag=!flag;
        }
        return true;
    }
}
