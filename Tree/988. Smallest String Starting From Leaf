/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public String smallestFromLeaf(TreeNode root) {
        Queue<String> pq=new PriorityQueue<>();
        helper(root,pq,new StringBuilder());        
        return pq.peek();
    }
    public void helper(TreeNode root,Queue<String> pq,StringBuilder ans){
        if( root == null){
            return;
        }
        ans.append((char)('a'+root.val));
        if(root.left == null  && root.right == null){
            pq.add(ans.reverse().toString());
            ans.reverse();
        }
        else{
            helper(root.left,pq,ans);
            helper(root.right,pq,ans);
        }
        ans.deleteCharAt(ans.length()-1);
    }
}
